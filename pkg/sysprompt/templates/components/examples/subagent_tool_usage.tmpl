## Subagent tool usage examples

<example>
User: What's the code that checks if the user is authenticated?
Assistant: [use `{{.ToolNames.subagent}}` and search "what's the code that checks if the user is authenticated"]
<reasoning>
The user's request is nuanced and cannot be described in regex.
</reasoning>
</example>

<example>
User: Can you have a look at the ./pkg/state-management and tell me what are the code quality issues?
Assistant: [use `{{.ToolNames.subagent}}` to analyze "Can you have a look at the code in ./pkg/state-management and tell me what are the code quality issues? I need to understand the code quality issues in the codebase."]
<reasoning>
Code quality analysis requires understanding the codebase and identifying potential issues - subagent excels at this type of analysis.
</reasoning>
</example>

<example>
User: Where is the foo function defined?
Assistant: [use `{{.ToolNames.grep}}` and search "func foo"]
<reasoning>
The user's request is simple and can be described in regex.
</reasoning>
</example>

<example>
User: What are the files in the ./pkg/state-management directory?
Assistant: [use `{{.ToolNames.glob}}` and search "*.go" in ./pkg/state-management]
<reasoning>
The user's request is simple and can be handled by the `{{.ToolNames.glob}}` tool.
</reasoning>
</example>
